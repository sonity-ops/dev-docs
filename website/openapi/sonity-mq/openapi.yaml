openapi: 3.0.0
servers:
  - url: //petstore.swagger.io/v2
    description: Default server
  - url: //petstore.swagger.io/sandbox
    description: Sandbox server
info:
  description: |
    This is a sample server Petstore server.
    You can find out more about Swagger at
    [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).
    For this sample, you can use the api key `special-key` to test the authorization filters.

    # Introduction
    This API is documented in **OpenAPI format** and is based on
    [Petstore sample](http://petstore.swagger.io/) provided by [swagger.io](http://swagger.io) team.
    It was **extended** to illustrate features of [generator-openapi-repo](https://github.com/Rebilly/generator-openapi-repo)
    tool and [ReDoc](https://github.com/Redocly/redoc) documentation. In addition to standard
    OpenAPI syntax we use a few [vendor extensions](https://github.com/Redocly/redoc/blob/master/docs/redoc-vendor-extensions.md).

    # OpenAPI Specification
    This API is documented in **OpenAPI format** and is based on
    [Petstore sample](http://petstore.swagger.io/) provided by [swagger.io](http://swagger.io) team.
    It was **extended** to illustrate features of [generator-openapi-repo](https://github.com/Rebilly/generator-openapi-repo)
    tool and [ReDoc](https://github.com/Redocly/redoc) documentation. In addition to standard
    OpenAPI syntax we use a few [vendor extensions](https://github.com/Redocly/redoc/blob/master/docs/redoc-vendor-extensions.md).

    # Cross-Origin Resource Sharing
    This API features Cross-Origin Resource Sharing (CORS) implemented in compliance with  [W3C spec](https://www.w3.org/TR/cors/).
    And that allows cross-domain communication from the browser.
    All responses have a wildcard same-origin which makes them completely public and accessible to everyone, including any code on any site.

    # Authentication

    Petstore offers two forms of authentication:
      - API Key
      - OAuth2
    OAuth2 - an open protocol to allow secure authorization in a simple
    and standard method from web, mobile and desktop applications.

    <SecurityDefinitions />

  version: 1.0.0
  title: Sonity MQ [Automatic Page From File]
  termsOfService: "http://swagger.io/terms/"
  contact:
    name: API Support
    email: apiteam@swagger.io
    url: https://github.com/Redocly/redoc
  x-logo:
    url: "https://redocly.github.io/redoc/petstore-logo.png"
    altText: Petstore logo
  license:
    name: Apache 2.0
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
externalDocs:
  description: Find out how to create Github repo for your OpenAPI spec.
  url: "https://github.com/Rebilly/generator-openapi-repo"
paths:
  /api/dlq:
    post:
      summary: Dead Letter Queue; Add Task
      description: ""
      operationId: addTaskTRoDLQ
      responses:
        "200":
          description: Success Message
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                task:
                  description: task
                  type: object
                  properties:
                    sonity_profile_id:
                      type: number
                    campaign_definition_id:
                      type: number
                    fields:
                      type: array
  /api/export-csv:
    post:
      summary: Export campaign contacts to CSV
      description: ""
      operationId: exportCSV
      responses:
        "200":
          description: Success Message
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                task:
                  description: task
                  type: object
                  properties:
                    sonity_profile_id:
                      type: number
                    campaign_definition_id:
                      type: number
                    fields:
                      type: array
  /api/upload-images:
    post:
      summary: Upload images  to the AWS Bucket
      description: ""
      operationId: uploadImages
      responses:
        "200":
          description: Success Message
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                contact_l_id:
                  type: number
                thumb:
                  type: string
  /api/emails:
    post:
      summary: Send emails
      description: ""
      operationId: sendEmails
      responses:
        "200":
          description: Success Message
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                task:
                  description: task
                  type: object
                  properties:
                    filename:
                      type: string
                    email:
                      type: string
                    csv:
                      type: string
                    token:
                      type: string
  "/api/general/{queueName}/{jobId}":
    get:
      summary: Get job status
      description: ""
      operationId: getJobStatus
      responses:
        "200":
          description: Success Message
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: number
                  jobId:
                    type: number
                  state:
                    type: string
                  progress:
                    type: number
                  reason:
                    type: string
                  result:
                    type: string

components:
  schemas:
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string

    Category:
      type: object
      properties:
        id:
          description: Category ID
          allOf:
            - $ref: "#/components/schemas/Id"
        name:
          description: Category name
          type: string
          minLength: 1
        sub:
          description: Test Sub Category
          type: object
          properties:
            prop1:
              type: string
              description: Dumb Property
      xml:
        name: Category
    Id:
      type: integer
      format: int64
      readOnly: true
  securitySchemes:
    petstore_auth:
      description: |
        Get access to data while protecting your account credentials.
        OAuth2 is also a safer and more secure way to give you access.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: "http://petstore.swagger.io/api/oauth/dialog"
          scopes:
            "write:pets": modify pets in your account
            "read:pets": read your pets
    api_key:
      description: >
        For this sample, you can use the api key `special-key` to test the
        authorization filters.
      type: apiKey
      name: api_key
      in: header
  examples:
    Order:
      value:
        quantity: 1
        shipDate: "2018-10-19T16:46:45Z"
        status: placed
        complete: false
